---
const videos = [
  { src: "/assets/Bg/bgWelcome01.mp4", poster: "/assets/Posters/poster1.png" },
  { src: "/assets/Bg/bgWelcome02.mp4", poster: "/assets/Posters/poster2.png" },
  { src: "/assets/Bg/bgWelcome03.mp4", poster: "/assets/Posters/poster3.png" },
];

// Elegimos un video aleatorio antes de renderizar
const randomVideo = videos[Math.floor(Math.random() * videos.length)];

const { t } = Astro.props;
---

<div id="container">
  <main class="relative w-full h-screen flex items-center justify-between">
    <!-- Video de fondo -->
    <video
      autoplay
      muted
      playsinline
      loop
      class="absolute inset-0 w-full h-full object-cover"
      poster={randomVideo.poster}
    >
      <source src={randomVideo.src} type="video/mp4" />
      {t.error}
    </video>

    <!-- Contenido sobre el video -->
    <div
      class="relative z-10 flex flex-col items-center justify-center w-full h-full bg-zinc-900/30 p-10 text-zinc-100"
    >
      <h1 class="text-xl font-thin tracking-widest text-center" data-aos="fade-up">
        {t.weare}
      </h1>
      <h1 class="caprasimo text-7xl md:text-9xl overflow-hidden relative" data-aos="fade-up">
        <div class="rotator w-[370px] md:w-[700px]">
          {t.rotatingWords.map((word: string) => <span>{word}</span>)}
        </div>
      </h1>

      <span
        data-aos="zoom-in-up"
        data-aos-delay="300"
        class="text-center md:text-left bg-gray-900 text-gray-100 text-xs uppercase font-medium me-2 px-4 py-1 rounded-sm mt-20 mb-5"
        >{t.labelContact}</span
      >
      <p 
        class="w-full md:w-150 text-center text-pretty mx-auto font-light"
        data-aos="fade-up"
        data-aos-delay="500">
        {t.textContent}
      </p>

      <div class="flex flex-col items-center">
        <a
        href="" onclick="Calendly.initPopupWidget({url: 'https://calendly.com/rodfuentealbauno/30min'});return false;"
        target="_blank"
        rel="noopener noreferrer"
        data-aos="zoom-in-up"
        data-aos-delay="700"
      >
        <button class="animate-bounce mt-10 rounded-lg px-4 py-2 font-bold bg-teal-300 text-teal-700 hover:bg-teal-600 hover:text-teal-400 transition delay-100 duration-200 ease-in-out hover:cursor-pointer hover:-translate-y-1 hover:scale-105">
          {t.btnContact}
        </button>

      </a>




        <p
          class="mt-10 text-xs transition delay-100 duration-200 ease-in-out hover:scale-105"
          data-aos="fade-up"
          data-aos-delay="500"
        >
          {t.scrollDown} <a href="#project" class="hover:underline"
            >{t.scrollDownLink}</a
          >
        </p>
      </div>
    </div>
  </main>
</div>

<script>
  import { gsap } from "gsap";

  document.addEventListener("DOMContentLoaded", () => {
    const words = document.querySelectorAll(".rotator > span"); // Seleccionamos las palabras

    // Inicializamos un timeline para animar las palabras
    const rotatorTimeline = gsap.timeline({ repeat: -1, repeatDelay: 0 });
    rotatorTimeline.timeScale(0.3);

    // Animamos las palabras
    for (let i = 0; i < words.length; i++) {
      let delay = i - 1;
      let wordTL = gsap.timeline();

      if (i !== 0) {
        gsap.set(words[i], { opacity: 1 }); // Aseguramos que la palabra esté visible
        wordTL.from(words[i], {
          duration: 0.5,
          yPercent: 100,
          opacity: 0,
          ease: "power4.out",
        });
      } else {
        // Primera palabra, la mostramos inmediatamente
        delay += 1;
        gsap.set(words[0], { opacity: 1, yPercent: 0 });
      }

      // Aplicamos la salida hacia arriba a todas las palabras, incluida la última
      wordTL.to(words[i], {
        duration: 0.5,
        yPercent: -100,
        opacity: 0,
        ease: "power4.out",
      });

      rotatorTimeline.add(wordTL, delay); // Añadimos cada palabra al timeline
    }
  });
</script>

<style>
  #container {
    height: 100%;
  }

  main {
    display: flex;
    justify-content: center;
  }

  .rotator {
    position: relative;
    height: 150px;
    text-align: center;
    overflow: hidden; /* Solo se ve lo que está dentro del contenedor */
  }

  .rotator span {
    display: block;
    opacity: 0;
    position: absolute;
    top: 0; /* Todas las palabras empiezan desde la misma posición */
    left: 0;
    width: 100%;
  }

  .caprasimo {
    font-family: "Caprasimo", system-ui;
    position: relative;
  }
</style>
